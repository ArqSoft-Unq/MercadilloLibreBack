version: '3.6'
services:
  backend:
    depends_on:
      - db
      - kafka
    image: gradle:7.2.0-jdk11
    ports:
      - 8080:8080
    volumes:
      - .:/home/gradle/project
    working_dir: /home/gradle/project
    environment:
      KAFKA_URL: "kafka:29092"
      SPRING_APPLICATION_JSON: '{
        "kafka.url":"kafka:29092",
        "spring.datasource.url":"jdbc:postgresql://db:5432/mercadillo_back_db",
        "spring.datasource.username":"postgres",
        "spring.datasource.password":"postgres",
        "spring.jpa.properties.hibernate.dialect":"org.hibernate.dialect.PostgreSQLDialect",
        "spring.jpa.hibernate.ddl-auto":"update",
        "spring.kafka.bootstrap-servers=kafka":"29092"
      }'
    command: 'gradle bootRun'
  db:
    image: postgres:12
    ports:
      - "5432:5432"
    environment:
      POSTGRESQL_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mercadillo_back_db
      DATABASE_HOST: db
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1